{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bardess A Cleartelligence Company Documentation Repository","text":"<p>Welcome to the official Bardess A Cleartelligence Company Documentation repository! This repository contains all the technical documentation, guides, and resources related to our products, projects, and internal workflows.</p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ol> <li>Introduction</li> <li>Repository Structure</li> <li>How to Navigate the Documentation</li> <li>How to Contribute</li> <li>Installation and Setup</li> <li>Frequently Asked Questions (FAQ)</li> <li>Support and Contact</li> </ol>"},{"location":"#introduction","title":"Introduction","text":"<p>This repository serves as a single source of truth for all the documentation related to Bardess A Cleartelligence Company. Here you will find:</p> <ul> <li>Installation guides and setup instructions for our projects.</li> <li>API documentation and usage guidelines.</li> <li>Internal process documentation for development and collaboration.</li> <li>Best practices, coding standards, and workflow guidelines.</li> </ul>"},{"location":"#repository-structure","title":"Repository Structure","text":"<p>The repository is organized into sections for easy navigation. Below is the structure of the repository:</p> <pre><code>/docs/\n   \u251c\u2500\u2500 installation/\n   \u2502   \u251c\u2500\u2500 installation_guide.md\n   \u251c\u2500\u2500 workflows/\n   \u2502   \u251c\u2500\u2500 coding_standards.md\n   \u2502   \u251c\u2500\u2500 development_workflow.md\n   \u251c\u2500\u2500 customer_repository/\n   \u2502   \u251c\u2500\u2500 customer_name/\n   \u2502   \u2502   \u251c\u2500\u2500 development_workflow.md\nREADME.md\n</code></pre>"},{"location":"#key-sections","title":"Key Sections:","text":"<ul> <li>Installation: Contains all setup guides for different projects and environments.</li> <li>Workflows: Best practices, coding standards, and internal development workflows.</li> </ul> <p>Each directory contains markdown files for individual topics. Feel free to explore based on your area of interest.</p>"},{"location":"#how-to-navigate-the-documentation","title":"How to Navigate the Documentation","text":""},{"location":"#search-functionality","title":"Search Functionality:","text":"<ul> <li>If you're using GitHub Pages or a static site generator like MkDocs or Docusaurus, you can use the search feature on the documentation website to quickly find what you need.</li> </ul>"},{"location":"#how-to-contribute","title":"How to Contribute","text":"<p>We encourage contributions to keep our documentation up to date and accurate. Here\u2019s how you can contribute:</p>"},{"location":"#1-fork-the-repository","title":"1. Fork the Repository","text":"<ul> <li>Fork this repository to your own GitHub account.</li> </ul>"},{"location":"#2-clone-your-fork","title":"2. Clone Your Fork","text":"<p><code>bash    git clone https://github.com/bardess-group-ltd/documentation.git    cd documentation-repository</code></p>"},{"location":"#3-create-a-new-branch","title":"3. Create a New Branch","text":"<p><code>bash    git checkout -b feature/update-docs</code></p>"},{"location":"#4-make-changes-and-commit","title":"4. Make Changes and Commit","text":"<ul> <li>Update or add new documentation in the appropriate folder.</li> <li>Make sure to follow the markdown standards for formatting.</li> </ul> <p><code>bash    git add .    git commit -m \"Updated installation guide\"</code></p>"},{"location":"#5-push-changes-and-open-a-pull-request","title":"5. Push Changes and Open a Pull Request","text":"<p><code>bash    git push origin feature/update-docs</code></p> <ul> <li>Go to your forked repository on GitHub and open a Pull Request to the main repository.</li> </ul>"},{"location":"#6-review-process","title":"6. Review Process","text":"<ul> <li>Your changes will be reviewed by a project maintainer. Once approved, they will be merged into the main documentation repository.</li> </ul>"},{"location":"#installation-and-setup","title":"Installation and Setup","text":"<p>If you want to contribute locally or view the documentation on your machine, follow these steps:</p> <ol> <li> <p>Clone the repository:    <code>bash    git clone https://github.com/bardess-group-ltd/documentation.git</code></p> </li> <li> <p>Install dependencies (if required):</p> </li> <li> <p>If you're using a tool like MkDocs or Docusaurus, install dependencies:      <code>bash      pip install mkdocs      # OR      npm install docusaurus</code></p> </li> <li> <p>Serve the documentation locally:    <code>bash    mkdocs serve    # OR    npm start</code></p> </li> <li> <p>Open the documentation in your browser at <code>http://localhost:8000</code> or <code>http://localhost:3000</code>.</p> </li> </ol>"},{"location":"#frequently-asked-questions-faq","title":"Frequently Asked Questions (FAQ)","text":""},{"location":"#q1-who-can-contribute-to-the-documentation","title":"Q1: Who can contribute to the documentation?","text":"<p>Anyone in the organization can contribute to this repository. We encourage contributions from developers, product managers, and other team members who work closely with our projects.</p>"},{"location":"#q2-how-do-i-request-a-new-section-or-guide","title":"Q2: How do I request a new section or guide?","text":"<p>If you feel a certain section or guide is missing, please open an issue in the repository, and we will review the request.</p>"},{"location":"#support-and-contact","title":"Support and Contact","text":"<p>If you need help with the documentation or have questions:</p> <ul> <li>Open an issue in the repository.</li> <li>Contact Lisa Iyer @liyer@bardess.com</li> </ul>"},{"location":"customer%20repositories/tokyo-century/ros/migration-docs/migration_steps_batch_streaming_solifi/","title":"Migration from Batch Processing to Streaming in Databricks","text":""},{"location":"customer%20repositories/tokyo-century/ros/migration-docs/migration_steps_batch_streaming_solifi/#introduction","title":"Introduction","text":"<p>This document outlines the steps required to migrate from batch data processing to streaming data processing in Databricks. The current batch processing setup for Solifi\u2019s data from Kafka takes around 3\u20134 minutes to complete. By transitioning to a streaming data pipeline, we aim to process this data in near real-time. More about the process can be found</p>"},{"location":"customer%20repositories/tokyo-century/ros/migration-docs/migration_steps_batch_streaming_solifi/#pre-migration-step","title":"Pre-migration Step","text":"<p>Before initiating the migration process, ensure the following: - Production data is not streaming, and no activities are currently taking place in production. - Confirm that all ongoing batch processes have been completed or stopped.</p>"},{"location":"customer%20repositories/tokyo-century/ros/migration-docs/migration_steps_batch_streaming_solifi/#migration-steps","title":"Migration Steps","text":""},{"location":"customer%20repositories/tokyo-century/ros/migration-docs/migration_steps_batch_streaming_solifi/#step-1-run-initial-setup-queries","title":"Step 1: Run Initial Setup Queries","text":"<ol> <li>Access the following Databricks SQL Editor Link and run the setup queries for the migration of history data into source tables.</li> </ol>"},{"location":"customer%20repositories/tokyo-century/ros/migration-docs/migration_steps_batch_streaming_solifi/#step-2-migrate-source-to-bronze-dlt_src_to_brnz","title":"Step 2: Migrate Source to Bronze (dlt_src_to_brnz)","text":"<ol> <li>Update the environment variable to production.</li> <li>Ensure that the environment configuration reflects production settings.</li> <li>Run the history load to bronze:</li> <li>Execute the Delta Live Table (DLT) pipeline <code>dlt_src_to_brnz</code> to load historical batch data into the bronze table.</li> <li>This step is crucial for initializing the bronze layer with past data.</li> </ol>"},{"location":"customer%20repositories/tokyo-century/ros/migration-docs/migration_steps_batch_streaming_solifi/#step-3-start-the-bronze-pipeline-dlt_bronze_pipeline","title":"Step 3: Start the Bronze Pipeline (dlt_bronze_pipeline)","text":"<ol> <li>Update the environment variable to production, similar to Step 2.</li> <li>Start the bronze pipeline:</li> <li>Once the tables in <code>dlt_src_to_brnz</code> have been created, initiate the <code>dlt_bronze_pipeline</code> to process the incoming streaming data into the bronze layer.</li> <li>Monitor the pipeline to ensure the tables are being populated with real-time data.</li> </ol>"},{"location":"customer%20repositories/tokyo-century/ros/migration-docs/migration_steps_batch_streaming_solifi/#step-4-start-ros-streaming-topics-to-source","title":"Step 4: Start ROS Streaming Topics to Source","text":"<ol> <li>Update the environment variable to production.</li> <li>Ensure the environment variables and settings are switched to production.</li> <li>Start the streaming job for ROS topics:</li> <li>Start the job responsible for streaming ROS topics from Kafka into the source tables.</li> <li>This step transitions the workflow from batch-based processing to continuous streaming.</li> </ol>"},{"location":"customer%20repositories/tokyo-century/ros/migration-docs/migration_steps_batch_streaming_solifi/#post-migration-validation","title":"Post-migration Validation","text":"<p>Once the migration steps are complete, it is important to validate the streaming setup to ensure everything is functioning as expected:</p> <ol> <li>Monitor the streaming pipelines:</li> <li>Ensure the streaming pipelines are processing data without significant lag or errors.</li> <li> <p>Check the performance metrics of the pipelines to identify any bottlenecks.</p> </li> <li> <p>Data Quality Check:</p> </li> <li> <p>Validate the quality of the data being ingested into the bronze layer and ensure that no data loss or corruption occurred during the migration.</p> </li> <li> <p>Update Monitoring Dashboards:</p> </li> <li> <p>Update the existing monitoring dashboards to reflect the streaming data architecture instead of the batch process.</p> </li> <li> <p>Test Failover and Recovery:</p> </li> <li>Run tests to ensure that the streaming pipelines can handle unexpected failures and automatically recover without data loss.</li> </ol>"},{"location":"customer%20repositories/tokyo-century/ros/migration-docs/migration_steps_batch_streaming_solifi/#conclusion","title":"Conclusion","text":"<p>The migration from batch processing to streaming in Databricks enables near real-time data processing, significantly reducing the data processing delay from minutes to seconds. Ensure continuous monitoring and validation of the streaming pipelines for optimal performance.</p>"},{"location":"customer%20repositories/tokyo-century/ros/migration-docs/migration_steps_batch_streaming_solifi/#references","title":"References","text":"<ul> <li>Databricks Streaming Documentation</li> <li>Delta Live Tables Documentation</li> </ul>"},{"location":"customer%20repositories/tokyo-century/ros/migration-docs/migration_steps_batch_streaming_solifi/#appendix","title":"Appendix","text":"<ul> <li>Environment Variables: Ensure all environment variables are set properly for production use.</li> <li>ROS Topics: The list of streaming topics configured for the migration.</li> <li>Monitoring Tools: List the tools used to monitor the streaming pipelines.</li> </ul>"},{"location":"installation/installation_guide_template/","title":"Installation Guide Template","text":"<p>This guide will walk you through the installation of [Project Name].</p>"},{"location":"installation/installation_guide_template/#prerequisites","title":"Prerequisites","text":"<ul> <li>[List software prerequisites, e.g., Python, Node.js, etc.]</li> <li>[Mention required libraries or frameworks]</li> </ul>"},{"location":"installation/installation_guide_template/#steps","title":"Steps","text":"<ol> <li> <p>Clone the repository: <code>bash    git clone https://github.com/your-organization/your-repository.git    cd your-repository</code></p> </li> <li> <p>Install dependencies: <code>bash    pip install -r requirements.txt</code></p> </li> <li> <p>Configure environment variables:    [Provide instructions for environment setup]</p> </li> <li> <p>Run the application: <code>bash    python app.py</code></p> </li> </ol>"},{"location":"installation/installation_guide_template/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>[Provide solutions to common installation issues]</li> </ul>"},{"location":"workflows/coding_standards_template/","title":"Coding Standards Template","text":"<p>This document outlines the coding standards for [Organization Name].</p>"},{"location":"workflows/coding_standards_template/#general-guidelines","title":"General Guidelines","text":"<ul> <li>Use meaningful variable and function names.</li> <li>Keep functions small and focused on a single task.</li> <li>Avoid deep nesting of code. Break down complex code into smaller functions.</li> <li>Ensure all code is documented with clear and concise comments.</li> </ul>"},{"location":"workflows/coding_standards_template/#python-standards","title":"Python Standards","text":"<ul> <li>Follow PEP 8 guidelines for Python code.</li> <li>Use <code>black</code> for code formatting and ensure the code is well-structured.</li> </ul> <pre><code>black your_code.py\n</code></pre>"},{"location":"workflows/coding_standards_template/#git-commit-messages","title":"Git Commit Messages","text":"<ul> <li>Write meaningful commit messages. The message should clearly state what was changed and why.</li> <li>Use the format:   <code>type: brief description</code>   Example:   <code>feat: Add user authentication</code></li> </ul>"},{"location":"workflows/coding_standards_template/#testing","title":"Testing","text":"<ul> <li>All new features should be covered with unit tests.</li> <li>Run tests before pushing to the repository:   <code>bash   pytest</code></li> </ul>"},{"location":"workflows/development_workflow_template/","title":"Development Workflow Template","text":"<p>This document explains the development workflow for [Organization Name].</p>"},{"location":"workflows/development_workflow_template/#workflow-overview","title":"Workflow Overview","text":"<p>We use GitHub Flow for managing development. Here's a brief overview of the process:</p>"},{"location":"workflows/development_workflow_template/#1-fork-and-clone-the-repository","title":"1. Fork and Clone the Repository","text":"<ol> <li>Fork the repository to your own GitHub account.</li> <li>Clone your fork:    <code>bash    git clone https://github.com/your-username/your-repository.git    cd your-repository</code></li> </ol>"},{"location":"workflows/development_workflow_template/#2-create-a-branch","title":"2. Create a Branch","text":"<p>Create a new branch for your feature or bug fix:</p> <pre><code>git checkout -b feature/your-feature-name\n</code></pre>"},{"location":"workflows/development_workflow_template/#3-make-changes-and-commit","title":"3. Make Changes and Commit","text":"<p>Make your changes and commit them:</p> <pre><code>git add .\ngit commit -m \"feat: Add new feature description\"\n</code></pre>"},{"location":"workflows/development_workflow_template/#4-push-changes","title":"4. Push Changes","text":"<p>Push the changes to your fork:</p> <pre><code>git push origin feature/your-feature-name\n</code></pre>"},{"location":"workflows/development_workflow_template/#5-open-a-pull-request","title":"5. Open a Pull Request","text":"<p>Go to the repository on GitHub and open a Pull Request from your branch. The PR will be reviewed by a team member before being merged.</p>"},{"location":"workflows/development_workflow_template/#6-code-review-and-merge","title":"6. Code Review and Merge","text":"<p>Once your pull request is approved, it will be merged into the <code>main</code> branch.</p>"},{"location":"workflows/development_workflow_template/#code-reviews","title":"Code Reviews","text":"<ul> <li>Code must be reviewed by at least one team member.</li> <li>Ensure all unit tests pass before merging.</li> </ul>"}]}